params {
  outdir = 'c2l_results'
  ref_h5ad = null
  ref_batch_key = null
  celltype_key = null
  categorical_covariate_keys = []
  continuous_covariate_keys = []
  

  vis_h5ad = null
  ref_csv = null
  vis_batch_key = 'library_id'
  detection_alpha = 20
  N_cells_per_location = 30
  c2l_deconvolute_max_epochs = 50000
}

singularity {
  enabled = true
  autoMounts = true
  runOptions = '--nv -B /lustre,/nfs --home /tmp/snare_tmp'
  pullTimeout = '100m'
}

executor {
  name = 'lsf'
  perJobMemLimit = true
}

process {
  container = '/nfs/cellgeni/singularity/images/c2l_v014.sif'
  errorStrategy = 'retry'

  maxRetries = { task.exitStatus in 130..140 ? 3 : 1 }

  withName: c2l_estimate_signatures {
    cpus = 1
    memory = 32.GB + 30.GB * task.attempt
    queue = 'gpu-normal'
    clusterOptions = { "-gpu 'num=1:j_exclusive=no:gmem=32000:mode=shared'" }
  }


  withName: process c2l_deconvolute {
    cpus = 1
    memory = 12.GB + 50.GB * task.attempt
    queue = 'gpu-normal'
    clusterOptions = { "-gpu 'num=1:j_exclusive=no:gmem=32000:mode=shared'" }
  }

}


// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Capturing Nextflow log files into a reports directory
timeline {
  enabled = true
  file = "${params.outdir}/nextflow-reports/timeline.html"
  overwrite = true
}

report {
  enabled = true
  file = "${params.outdir}/nextflow-reports/report.html"
  overwrite = true
}

trace {
  enabled = true
  file = "${params.outdir}/nextflow-reports/trace.txt"
  overwrite = true
}

// Ensures work directories and removed when pipeline completes
cleanup = false